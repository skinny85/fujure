package org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn; // Java Package generated by the BNF Converter.

public class MultiArgFuncType  extends FuncType {
  public final FuncTypeFragm functypefragm_;
  public final ListFuncTypeFragm listfunctypefragm_;
  public MultiArgFuncType(FuncTypeFragm p1, ListFuncTypeFragm p2) { functypefragm_ = p1; listfunctypefragm_ = p2; }

  public <R,A> R accept(org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.FuncType.Visitor<R,A> v, A arg) { return v.visit(this, arg); }

  public boolean equals(java.lang.Object o) {
    if (this == o) return true;
    if (o instanceof org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.MultiArgFuncType) {
      org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.MultiArgFuncType x = (org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.MultiArgFuncType)o;
      return this.functypefragm_.equals(x.functypefragm_) && this.listfunctypefragm_.equals(x.listfunctypefragm_);
    }
    return false;
  }

  public int hashCode() {
    return 37*(this.functypefragm_.hashCode())+this.listfunctypefragm_.hashCode();
  }


}
