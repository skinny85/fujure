package org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn; // Java Package generated by the BNF Converter.

public abstract class Expr implements java.io.Serializable {
  public abstract <R,A> R accept(Expr.Visitor<R,A> v, A arg);
  public interface Visitor <R,A> {
    public R visit(org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.IfExpr p, A arg);
    public R visit(org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.LetExpr p, A arg);
    public R visit(org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.StmtBlockExpr p, A arg);
    public R visit(org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.OrExpr p, A arg);
    public R visit(org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.AndExpr p, A arg);
    public R visit(org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.EqualityExpr p, A arg);
    public R visit(org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.InequalityExpr p, A arg);
    public R visit(org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.LesserExpr p, A arg);
    public R visit(org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.LesserEqualExpr p, A arg);
    public R visit(org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.GreaterExpr p, A arg);
    public R visit(org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.GreaterEqualExpr p, A arg);
    public R visit(org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.AdditionExpr p, A arg);
    public R visit(org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.SubtractionExpr p, A arg);
    public R visit(org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.MultiplicationExpr p, A arg);
    public R visit(org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.DivisionExpr p, A arg);
    public R visit(org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.ModuloExpr p, A arg);
    public R visit(org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.NotExpr p, A arg);
    public R visit(org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.NegateExpr p, A arg);
    public R visit(org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.PositateExpr p, A arg);
    public R visit(org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.ComplexRefExpr p, A arg);
    public R visit(org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.MethCallExpr p, A arg);
    public R visit(org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.FuncCallExpr p, A arg);
    public R visit(org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.SimpleRefExpr p, A arg);
    public R visit(org.fujure.fbc.parser.bnfc.antlr.fujure.Absyn.LiteralExpr p, A arg);

  }

}
